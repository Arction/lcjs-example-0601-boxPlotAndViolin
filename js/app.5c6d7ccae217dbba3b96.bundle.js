(self.webpackChunk=self.webpackChunk||[]).push([[524],{44:(e,t,r)=>{const a=r(377),s=r(613),{emptyLine:i,lightningChart:o,yDimensionStrategy:n,LegendBoxBuilders:d,AxisScrollStrategies:l,AxisTickStrategies:c,AutoCursorModes:S,Themes:u}=a,{createProgressiveFunctionGenerator:m}=s,h=(e,t,r,a,s)=>{let i;for(let o=r;o<=a;o+=s){const r=t(o),a=Math.abs(r-e);if(void 0===i||a<i.delta)i={x:o,delta:a};else if(void 0!==i&&a>i.delta)break}return i.x},g=o({resourcesBaseUrl:new URL(document.head.baseURI).origin+new URL(document.head.baseURI).pathname+"resources/"}).ChartXY({theme:u[new URLSearchParams(window.location.search).get("theme")||"darkGold"]||void 0}).setTitle("Probability distribution + Simulated accumulation and BoxSeries").setCursorMode("show-pointed").setPadding({right:20}),p=-4,x=.02,y=g.getDefaultAxisY(),A=g.addAxisY();g.getDefaultAxisX().setInterval({start:p,end:4,stopAxisAfter:!1}).setScrollStrategy(void 0),y.setTitle("Distribution function").setScrollStrategy(l.expansion).setTickStrategy(c.Numeric,(e=>e.setMajorTickStyle((e=>e.setGridStrokeStyle(i))).setMinorTickStyle((e=>e.setGridStrokeStyle(i))))),A.setTitle("Accumulated distribution (%)").setInterval({start:0,end:1,stopAxisAfter:!1}).setScrollStrategy(void 0).setTickStrategy(c.Numeric,(e=>e.setMajorTickStyle((e=>e.setGridStrokeStyle(i))).setMinorTickStyle((e=>e.setGridStrokeStyle(i)))));const k=g.addPointLineAreaSeries({yAxis:A,dataPattern:"ProgressiveX"}).setName("Simulated Cumulative Distribution"),f=g.addPointLineAreaSeries({yAxis:y,dataPattern:"ProgressiveX"}).setName("Probability Distribution"),b=g.addAreaRangeSeries({yAxis:y}).setName("Violin"),M=g.addBoxSeries({yAxis:y,dimensionStrategy:n}).setName("Box");(()=>{k.clear(),f.clear(),M.clear(),b.clear();const e=e=>1/(1*Math.sqrt(2*Math.PI))*Math.pow(Math.E,-Math.pow(e-0,2)/2),t=((e,t,r,a)=>{const s=[];for(let t=-4;t<=4;t+=a)s.push(e(t));const i=s.reduce(((e,t)=>e+t),0),o=[];let n=0;for(const e of s)n+=e/i,o.push(n);return e=>{const t=(e- -4)/8*400,r=Math.min(Math.max(Math.round(t),0),o.length-1);return o[r]}})(e,0,0,x);y.getStopped()||y.setInterval({start:0,end:1,stopAxisAfter:!1}),m().setSamplingFunction(t).setStart(p).setEnd(4).setStep(x).generate().setStreamBatchSize(8e3/900).setStreamInterval(30).toStream().forEach((e=>k.add(e))),m().setSamplingFunction(e).setStart(p).setEnd(4).setStep(x).generate().setStreamBatchSize(8e3/900).setStreamInterval(30).toStream().forEach((e=>{f.add(e),e.y>=.001&&b.add({position:e.x,high:1+e.y/2,low:1-e.y/2})})),setTimeout((()=>{const e=h(.25,t,p,4,x),r=h(.5,t,p,4,x),a=h(.75,t,p,4,x),s=a-e,i={start:.9,end:1.1,lowerExtreme:e-1.5*s,lowerQuartile:e,median:r,upperQuartile:a,upperExtreme:a+1.5*s};M.add(i)}),1500)})(),g.addLegendBox(d.HorizontalLegendBox).setAutoDispose({type:"max-width",maxWidth:.8}).add(g)}},e=>{e.O(0,[502],(()=>e(e.s=44))),e.O()}]);